server:
  # SpringBoot 项目的运行端口即为客户端反向 Websocket 连接端口
  port: 5555

spring:
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
  profiles.active: prod

gensokyo_config:
  port: 15630

swagger:
  enabled: true
  pathMapping:

shiro:
  ws:
    # 该配置为正向连接示例
    client:
      enable: false
      url: "ws://your-domain:port"
    # 该配置为反向连接示例
    server:
      enable: true
      url: "/ws/shiro"

warframe:
  status:
    trader-cron: "0 40 9 ? * 5"

logging:
  level:
    bot.wuliang: debug

mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath*:mapper/*.xml, classpath:mapper/log/*.xml
  type-aliases-package: bot.wuliang.entity
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    default-executor-type: simple
    use-generated-keys: true
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 关闭日志
    # log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl